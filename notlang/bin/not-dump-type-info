#!/usr/bin/env python

import sys

from notlang import typer
from notlang.parsing import parse, ParseError


def dump(env, substitutions):
    for name, (t, _, _)in env.env.items():
        print("%s has type %s" % (name, typer.get_substituted(t, substitutions)))


if __name__ == '__main__':
    if len(sys.argv) != 2:
        sys.stderr.write("Pass a single file to show\n")
        sys.exit(1)
    with open(sys.argv[1]) as f:
        source = f.read()
    try:
        parsed = parse(source)
    except ParseError as e:
        print e.nice_error_message(source=source, filename=sys.argv[1])
        sys.exit(1)
    try:
        env, substitutions = typer.typecheck(parsed)
    except (typer.NotNameError, typer.NotTypeError) as e:
        print e.nice_error_message(source=source, filename=sys.argv[1])
        sys.exit(1)
    else:
        dump(env, substitutions)
        pass
